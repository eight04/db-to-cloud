{"version":3,"file":"db-to-cloud.js","sources":["../node_modules/@eight04/read-write-lock/index.js","../lib/db-to-cloud.js","../shim/empty.js","../node_modules/universal-base64/dist/browser.js","../lib/request.js","../lib/drive/github.js","../lib/drive/dropbox.js","../lib/drive/onedrive.js","../lib/drive/google.js","../shim/path.js","../lib/drive/webdav.js"],"sourcesContent":["function createLock({maxActiveReader = Infinity} = {}) {\r\n  let firstTask;\r\n  let lastTask;\r\n  let activeReader = 0;\r\n  const self = {\r\n    read: fn => que(fn, false),\r\n    write: fn => que(fn, true),\r\n    length: 0\r\n  };\r\n  return self;\r\n  \r\n  function que(fn, block) {\r\n    const task = createTask({fn, block});\r\n    if (!lastTask) {\r\n      firstTask = lastTask = task;\r\n    } else {\r\n      lastTask.next = task;\r\n      task.prev = lastTask;\r\n      lastTask = task;\r\n      if (!firstTask) {\r\n        firstTask = lastTask;\r\n      }\r\n    }\r\n    self.length++;\r\n    deque();\r\n    return task.q.promise;\r\n  }\r\n  \r\n  function defer() {\r\n    const o = {};\r\n    o.promise = new Promise((resolve, reject) => {\r\n      o.resolve = resolve;\r\n      o.reject = reject;\r\n    });\r\n    return o;\r\n  }\r\n  \r\n  function createTask({\r\n    fn,\r\n    block = false,\r\n    prev,\r\n    next,\r\n    q = defer(),\r\n    q2 = fn.length ? defer() : null\r\n  }) {\r\n    return {fn, block, prev, next, q, q2};\r\n  }\r\n  \r\n  function deque() {\r\n    const task = firstTask;\r\n    if (\r\n      !task ||\r\n      task.block && task.prev ||\r\n      task.prev && task.prev.block ||\r\n      activeReader >= maxActiveReader\r\n    ) {\r\n      return;\r\n    }\r\n    if (!task.block) {\r\n      activeReader++;\r\n    }\r\n    firstTask = task.next;\r\n    let result;\r\n    try {\r\n      result = task.fn(task.q2 && task.q2.resolve);\r\n    } catch (err) {\r\n      task.q.reject(err);\r\n      // auto release with sync error\r\n      // q2 is useless in this case\r\n      onDone();\r\n      return;\r\n    }\r\n    if (task.q2) {\r\n      task.q2.promise.then(_onDone);\r\n    }\r\n    if (result && result.then) {\r\n      const pending = result.then(task.q.resolve, task.q.reject);\r\n      if (!task.q2) {\r\n        pending.then(onDone);\r\n      }\r\n    } else {\r\n      task.q.resolve(result);\r\n      if (!task.q2) {\r\n        // it's a sync function and you don't want to release it manually, why\r\n        // do you need a lock?\r\n        onDone();\r\n        return;\r\n      }\r\n    }\r\n    deque();\r\n    \r\n    function onDone() {\r\n      _onDone();\r\n    }\r\n    \r\n    function _onDone(afterDone) {\r\n      if (task.prev) {\r\n        task.prev.next = task.next;\r\n      }\r\n      if (task.next) {\r\n        task.next.prev = task.prev;\r\n      }\r\n      if (lastTask === task) {\r\n        lastTask = task.prev;\r\n      }\r\n      if (!task.block) {\r\n        activeReader--;\r\n      }\r\n      self.length--;\r\n      if (afterDone) {\r\n        afterDone();\r\n      }\r\n      deque();\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLockPool(options) {\r\n  const locks = new Map; // scope -> lock\r\n  return {\r\n    read: (scope, fn) => op(scope, fn, \"read\"),\r\n    write: (scope, fn) => op(scope, fn, \"write\"),\r\n    locks\r\n  };\r\n  \r\n  async function op(scopeIter, fn, opType) {\r\n    // FIXME: dead lock if there are duplicated scopes?\r\n    const scopes = [];\r\n    const acquiring = [];\r\n    for (const scope of scopeIter) {\r\n      let lock = locks.get(scope);\r\n      if (!lock) {\r\n        lock = createLock(options);\r\n        locks.set(scope, lock);\r\n      }\r\n      const o = {\r\n        lock,\r\n        scope,\r\n        relase: null\r\n      };\r\n      acquiring.push(lock[opType](release => {\r\n        o.release = release;\r\n      }));\r\n      scopes.push(o);\r\n    }\r\n    await Promise.all(acquiring);\r\n    let result;\r\n    try {\r\n      result = fn(fn.length && onDone);\r\n    } catch (err) {\r\n      onDone();\r\n      throw err;\r\n    }\r\n    if (result && result.then) {\r\n      if (!fn.length) {\r\n        result.then(onDone, onDone);\r\n      }\r\n      return await result;\r\n    }\r\n    if (!fn.length) {\r\n      onDone();\r\n    }\r\n    return result;\r\n    \r\n    function onDone() {\r\n      for (const scope of scopes) {\r\n        scope.release(() => {\r\n          if (!scope.lock.length) {\r\n            locks.delete(scope.scope);\r\n          }\r\n        });\r\n      }\r\n      scopes.length = 0;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  createLock,\r\n  createLockPool\r\n};\r\n","const {createLock} = require(\"@eight04/read-write-lock\");\r\n\r\nfunction debounced(fn) {\r\n  let timer = 0;\r\n  let q;\r\n  return () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(run);\r\n    if (!q) {\r\n      q = defer();\r\n    }\r\n    return q.promise;\r\n  };\r\n  \r\n  function run() {\r\n    Promise.resolve(fn())\r\n      .then(q.resolve, q.reject);\r\n    timer = 0;\r\n    q = null;\r\n  }\r\n  \r\n  function defer() {\r\n    const o = {};\r\n    o.promise = new Promise((resolve, reject) => {\r\n      o.resolve = resolve;\r\n      o.reject = reject;\r\n    });\r\n    return o;\r\n  }\r\n}\r\n\r\nfunction buildDrive(_drive) {\r\n  const drive = Object.create(_drive);\r\n  drive.get = async path => JSON.parse(await _drive.get(path));\r\n  drive.put = async (path, data) => await _drive.put(path, JSON.stringify(data));\r\n  drive.post = async (path, data) => await _drive.post(path, JSON.stringify(data));\r\n  drive.isInit = false;\r\n  \r\n  if (!drive.acquireLock) {\r\n    drive.acquireLock = acquireLock;\r\n    drive.releaseLock = releaseLock;\r\n  }\r\n  \r\n  if (!drive.getMeta) {\r\n    drive.getMeta = getMeta;\r\n    drive.putMeta = putMeta;\r\n  }\r\n  \r\n  if (!drive.peekChanges) {\r\n    drive.peekChanges = peekChanges;\r\n  }\r\n  \r\n  return drive;\r\n  \r\n  async function acquireLock(expire) {\r\n    try {\r\n      await this.post(\"lock.json\", {expire: Date.now() + expire * 60 * 1000});\r\n    } catch (err) {\r\n      if (err.code === \"EEXIST\") {\r\n        const data = await this.get(\"lock.json\");\r\n        if (Date.now() > data.expire) {\r\n          await this.delete(\"lock.json\");\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function releaseLock() {\r\n    await this.delete(\"lock.json\");\r\n  }\r\n  \r\n  async function getMeta() {\r\n    try {\r\n      return await this.get(\"meta.json\");\r\n    } catch (err) {\r\n      if (err.code === \"ENOENT\" || err.code === 404) {\r\n        return {};\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function putMeta(data) {\r\n    await this.put(\"meta.json\", data);\r\n  }\r\n  \r\n  async function peekChanges(oldMeta) {\r\n    const newMeta = await this.getMeta();\r\n    return newMeta.lastChange !== oldMeta.lastChange;\r\n  }\r\n}\r\n\r\nfunction dbToCloud({\r\n  onGet,\r\n  onPut,\r\n  onDelete,\r\n  onFirstSync,\r\n  onWarn = console.error,\r\n  onProgress,\r\n  compareRevision,\r\n  getState,\r\n  setState,\r\n  lockExpire = 60\r\n}) {\r\n  let drive;\r\n  let state;\r\n  let meta;\r\n  const changeCache = new Map;\r\n  const saveState = debounced(() => setState(drive, state));\r\n  const revisionCache = new Map;\r\n  const lock = createLock();\r\n  return {\r\n    use,\r\n    init,\r\n    uninit,\r\n    put,\r\n    delete: delete_,\r\n    syncNow,\r\n    drive: () => drive,\r\n    isInit: () => Boolean(state && state.enabled)\r\n  };\r\n  \r\n  function use(newDrive) {\r\n    drive = buildDrive(newDrive);\r\n  }\r\n  \r\n  function init() {\r\n    return lock.write(async () => {\r\n      if (state && state.enabled) {\r\n        return;\r\n      }\r\n      if (!drive) {\r\n        throw new Error(\"cloud drive is undefined\");\r\n      }\r\n      \r\n      state = await getState(drive) || {};\r\n      state.enabled = true;\r\n      if (!state.queue) {\r\n        state.queue = [];\r\n      }\r\n    });\r\n  }\r\n  \r\n  function uninit() {\r\n    return lock.write(async () => {\r\n      if (!state || !state.enabled) {\r\n        return;\r\n      }\r\n      state = meta = null;\r\n      changeCache.clear();\r\n      revisionCache.clear();\r\n      if (drive.uninit && drive.isInit) {\r\n        await drive.uninit();\r\n        drive.isInit = false;\r\n      }\r\n      await saveState();\r\n    });\r\n  }\r\n  \r\n  async function syncPull() {\r\n    meta = await drive.getMeta();\r\n    if (!meta.lastChange || meta.lastChange === state.lastChange) {\r\n      // nothing changes\r\n      return;\r\n    }\r\n    let changes = [];\r\n    if (!state.lastChange) {\r\n      // pull everything\r\n      changes = (await drive.list(\"docs\"))\r\n        .map(name => ({action: 'put', _id: name.slice(0, -5)}));\r\n    } else {\r\n      const end = Math.floor((meta.lastChange - 1) / 100); // inclusive end\r\n      let i = Math.floor(state.lastChange / 100);\r\n      while (i <= end) {\r\n        const newChanges = await drive.get(`changes/${i}.json`);\r\n        changeCache.set(i, newChanges);\r\n        changes = changes.concat(newChanges);\r\n        i++;\r\n      }\r\n      changes = changes.slice(state.lastChange % 100);\r\n    }\r\n    // merge changes\r\n    const idx = new Map;\r\n    for (const change of changes) {\r\n      idx.set(change._id, change);\r\n    }\r\n    let loaded = 0;\r\n    for (const [id, change] of idx) {\r\n      let doc, _rev;\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'pull',\r\n          total: idx.size,\r\n          loaded,\r\n          change\r\n        });\r\n      }\r\n      if (change.action === \"delete\") {\r\n        await onDelete(id, change._rev);\r\n      } else if (change.action === \"put\") {\r\n        try {\r\n          ({doc, _rev} = await drive.get(`docs/${id}.json`));\r\n        } catch (err) {\r\n          if (err.code === \"ENOENT\" || err.code === 404) {\r\n            onWarn(`Cannot find ${id}. Is it deleted without updating the history?`);\r\n            loaded++;\r\n            continue;\r\n          }\r\n          throw err;\r\n        }\r\n        await onPut(doc);\r\n      }\r\n      // record the remote revision\r\n      const rev = change._rev || _rev;\r\n      if (rev) {\r\n        revisionCache.set(id, rev);\r\n      }\r\n      loaded++;\r\n    }\r\n    state.lastChange = meta.lastChange;\r\n    await saveState();\r\n  }\r\n  \r\n  async function syncPush() {\r\n    if (!state.queue.length) {\r\n      // nothing to push\r\n      return;\r\n    }\r\n    // snapshot\r\n    const changes = state.queue.slice();\r\n\r\n    // merge changes\r\n    const idx = new Map;\r\n    for (const change of changes) {\r\n      idx.set(change._id, change);\r\n    }\r\n    // drop outdated change\r\n    const newChanges = [];\r\n    for (const change of idx.values()) {\r\n      // FIXME: is it safe to assume that the local doc is newer when\r\n      // remoteRev is undefined?\r\n      const remoteRev = revisionCache.get(change._id);\r\n      if (remoteRev !== undefined && compareRevision(change._rev, remoteRev) <= 0) {\r\n        continue;\r\n      }\r\n      newChanges.push(change);\r\n    }\r\n    // FIXME: there should be no need to push data when !newChanges.length\r\n    \r\n    // start pushing\r\n    let loaded = 0;\r\n    for (const change of newChanges) {\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'push',\r\n          loaded,\r\n          total: newChanges.length,\r\n          change\r\n        });\r\n      }\r\n      if (change.action === \"delete\") {\r\n        await drive.delete(`docs/${change._id}.json`);\r\n      } else if (change.action === \"put\") {\r\n        const doc = await onGet(change._id, change._rev);\r\n        await drive.put(`docs/${change._id}.json`, {doc, _rev: change._rev});\r\n      }\r\n      revisionCache.set(change._id, change._rev);\r\n      loaded++;\r\n    }\r\n    \r\n    // push changes\r\n    let lastChanges;\r\n    let index;\r\n    // meta is already pulled in syncPull\r\n    if (meta.lastChange) {\r\n      index = Math.floor(meta.lastChange / 100);\r\n      const len = meta.lastChange % 100;\r\n      lastChanges = len ?\r\n        changeCache.get(index) || await drive.get(`changes/${index}.json`) :\r\n        [];\r\n      // it is possible that JSON data contains more records defined by\r\n      // meta.lastChange\r\n      lastChanges = lastChanges.slice(0, len).concat(newChanges);\r\n    } else {\r\n      // first sync\r\n      index = 0;\r\n      lastChanges = newChanges;\r\n    }\r\n    \r\n    for (let i = 0; i * 100 < lastChanges.length; i++) {\r\n      const window = lastChanges.slice(i * 100, (i + 1) * 100);\r\n      await drive.put(`changes/${index + i}.json`, window);\r\n      changeCache.set(index + i, window);\r\n    }\r\n    meta.lastChange = (meta.lastChange || 0) + newChanges.length;\r\n    await drive.putMeta(meta);\r\n    \r\n    state.queue = state.queue.slice(changes.length);\r\n    state.lastChange = meta.lastChange;\r\n    await saveState();\r\n  }\r\n  \r\n  async function sync() {\r\n    await drive.acquireLock(lockExpire);\r\n    try {\r\n      await syncPull();\r\n      await syncPush();\r\n    } finally {\r\n      await drive.releaseLock();\r\n    }\r\n  }\r\n  \r\n  function syncNow(peek) {\r\n    return lock.write(async () => {\r\n      if (!state || !state.enabled) {\r\n        throw new Error(\"Cannot sync now, the sync is not enabled\");\r\n      }\r\n      if (drive.init && !drive.isInit) {\r\n        await drive.init();\r\n        drive.isInit = true;\r\n      }\r\n      if (state.lastChange == null) {\r\n        await onFirstSync();\r\n      }\r\n      await _syncNow(peek);\r\n    });\r\n  }\r\n  \r\n  async function _syncNow(peek = true) {\r\n    if (onProgress) {\r\n      onProgress({\r\n        phase: 'start'\r\n      });\r\n    }\r\n    try {\r\n      if (!state.queue.length && peek && meta) {\r\n        const changed = await drive.peekChanges(meta);\r\n        if (!changed) {\r\n          return;\r\n        }\r\n      }\r\n      await sync();\r\n    } finally {\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'end'\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  function put(_id, _rev) {\r\n    if (!state || !state.enabled) {\r\n      return;\r\n    }\r\n    state.queue.push({\r\n      _id, _rev, action: \"put\"\r\n    });\r\n    saveState();\r\n  }\r\n  \r\n  function delete_(_id, _rev) {\r\n    if (!state || !state.enabled) {\r\n      return;\r\n    }\r\n    state.queue.push({\r\n      _id, _rev, action: \"delete\"\r\n    });\r\n    saveState();\r\n  }\r\n}\r\n\r\nmodule.exports = {dbToCloud};\r\n","module.exports = () => {};\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction percentToByte(p) {\n    return String.fromCharCode(parseInt(p.slice(1), 16));\n}\nfunction encode(str) {\n    return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte));\n}\nexports.encode = encode;\nfunction byteToPercent(b) {\n    return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`;\n}\nfunction decode(str) {\n    return decodeURIComponent(Array.from(atob(str), byteToPercent).join(\"\"));\n}\nexports.decode = decode;\n//# sourceMappingURL=browser.js.map","const {createLock} = require(\"@eight04/read-write-lock\");\r\nconst base64 = require(\"universal-base64\");\r\n\r\nclass RequestError extends Error {\r\n  constructor(message, origin, code = origin && origin.status) {\r\n    super(message);\r\n    this.code = code;\r\n    this.origin = origin;\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, RequestError);\r\n    }\r\n  }\r\n}\r\n\r\nfunction delay(time) {\r\n  return new Promise(resolve => setTimeout(resolve, time));\r\n}\r\n\r\nfunction createRequest({fetch, cooldown = 0, getAccessToken, username, password}) {\r\n  const lock = createLock();\r\n  const basicAuth = username || password ?\r\n    `Basic ${base64.encode(`${username}:${password}`)}` :\r\n    null;\r\n  return args => {\r\n    return lock.write(async done => {\r\n      try {\r\n        return await doRequest(args);\r\n      } finally {\r\n        if (!cooldown || !args.method || args.method === \"GET\") {\r\n          done();\r\n        } else {\r\n          setTimeout(done, cooldown);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  async function doRequest({\r\n    path,\r\n    contentType,\r\n    headers: _headers,\r\n    format,\r\n    raw = false,\r\n    ...args\r\n  }) {\r\n    const headers = {};\r\n    if (getAccessToken) {\r\n      headers[\"Authorization\"] = `Bearer ${await getAccessToken()}`;\r\n    }\r\n    if (basicAuth) {\r\n      headers[\"Authorization\"] = basicAuth;\r\n    }\r\n    if (contentType) {\r\n      headers[\"Content-Type\"] = contentType;\r\n    }\r\n    Object.assign(headers, _headers);\r\n    while (true) { // eslint-disable-line no-constant-condition\r\n      // console.log(\"req\", path, args, headers);\r\n      const res = await fetch(path, {\r\n        headers,\r\n        ...args\r\n      });\r\n      // console.log(\"res\", path, args, res.status, headers);\r\n      if (!res.ok) {\r\n        const retry = res.headers.get(\"Retry-After\");\r\n        if (retry) {\r\n          const time = Number(retry);\r\n          if (time) {\r\n            await delay(time * 1000);\r\n            continue;\r\n          }\r\n        }\r\n        const text = await res.text();\r\n        throw new RequestError(`failed to fetch [${res.status}]: ${text}`, res);\r\n      }\r\n      if (raw) {\r\n        return res;\r\n      }\r\n      if (format) {\r\n        return await res[format]();\r\n      }\r\n      const resContentType = res.headers.get(\"Content-Type\");\r\n      if (/application\\/json/.test(resContentType)) {\r\n        return await res.json();\r\n      }\r\n      return await res.text();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {createRequest, RequestError};\r\n","/* global self */\r\nconst base64 = require(\"universal-base64\");\r\n\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  userAgent = \"db-to-cloud\",\r\n  owner,\r\n  repo,\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken, cooldown: 1000});\r\n  const shaCache = new Map;\r\n  return {\r\n    name: \"github\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list,\r\n    shaCache\r\n  };\r\n  \r\n  function requestAPI(args) {\r\n    if (!args.headers) {\r\n      args.headers = {};\r\n    }\r\n    if (!args.headers[\"User-Agent\"]) {\r\n      args.headers[\"User-Agent\"] = userAgent;\r\n    }\r\n    if (!args.headers[\"Accept\"]) {\r\n      args.headers[\"Accept\"] = \"application/vnd.github.v3+json\";\r\n    }\r\n    args.path = `https://api.github.com${args.path}`;\r\n    return request(args);\r\n  }\r\n  \r\n  async function list(file) {\r\n    // FIXME: This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the Git Trees API.\r\n    const result = await requestAPI({\r\n      path: `/repos/${owner}/${repo}/contents/${file}`\r\n    });\r\n    const names = [];\r\n    for (const item of result) {\r\n      names.push(item.name);\r\n      shaCache.set(item.path, item.sha);\r\n    }\r\n    return names;\r\n  }\r\n  \r\n  async function get(file) {\r\n    // FIXME: This API supports files up to 1 megabyte in size.\r\n    const result = await requestAPI({\r\n      path: `/repos/${owner}/${repo}/contents/${file}`\r\n    });\r\n    shaCache.set(result.path, result.sha);\r\n    return base64.decode(result.content);\r\n  }\r\n  \r\n  async function put(file, data, overwrite = true) {\r\n    const params = {\r\n      message: \"\",\r\n      content: base64.encode(data)\r\n    };\r\n    if (overwrite && shaCache.has(file)) {\r\n      params.sha = shaCache.get(file);\r\n    }\r\n    const args = {\r\n      method: \"PUT\",\r\n      path: `/repos/${owner}/${repo}/contents/${file}`,\r\n      contentType: \"application/json\",\r\n      body: JSON.stringify(params)\r\n    };\r\n    let retried = false;\r\n    let result;\r\n    while (!result) {\r\n      try {\r\n        result = await requestAPI(args);\r\n      } catch (err) {\r\n        if (err.code !== 422 || !err.message.includes(\"\\\\\\\"sha\\\\\\\" wasn't supplied\")) {\r\n          throw err;\r\n        }\r\n        if (!overwrite || retried) {\r\n          err.code = \"EEXIST\";\r\n          throw err;\r\n        }\r\n        await get(file);\r\n      }\r\n      retried = true;\r\n    }\r\n    shaCache.set(file, result.content.sha);\r\n  }\r\n  \r\n  function post(file, data) {\r\n    return put(file, data, false);\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      let sha = shaCache.get(file);\r\n      if (!sha) {\r\n        await get(file);\r\n        sha = shaCache.get(file);\r\n      }\r\n      await requestAPI({\r\n        method: \"DELETE\",\r\n        path: `/repos/${owner}/${repo}/contents/${file}`,\r\n        body: JSON.stringify({\r\n          message: \"\",\r\n          sha\r\n        })\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      // FIXME: do we have to handle 422 errors?\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  return {\r\n    name: \"dropbox\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list\r\n  };\r\n  \r\n  function requestRPC({path, body, ...args}) {\r\n    return request({\r\n      method: \"POST\",\r\n      path: `https://api.dropboxapi.com/2/${path}`,\r\n      contentType: \"application/json\",\r\n      body: JSON.stringify(body),\r\n      ...args\r\n    });\r\n  }\r\n  \r\n  async function list(file) {\r\n    const names = [];\r\n    let result = await requestRPC({\r\n      path: \"files/list_folder\",\r\n      body: {\r\n        path: `/${file}`\r\n      }\r\n    });\r\n    for (const entry of result.entries) {\r\n      names.push(entry.name);\r\n    }\r\n    if (!result.has_more) {\r\n      return names;\r\n    }\r\n    while (result.has_more) {\r\n      result = await requestRPC({\r\n        path: \"files/list_folder/continue\",\r\n        body: {\r\n          cursor: result.cursor\r\n        }\r\n      });\r\n      for (const entry of result.entries) {\r\n        names.push(entry.name);\r\n      }\r\n    }\r\n    return names;\r\n  }\r\n  \r\n  function stringifyParams(obj) {\r\n    const params = new URLSearchParams;\r\n    params.set(\"arg\", JSON.stringify(obj));\r\n    return params.toString();\r\n  }\r\n  \r\n  async function get(file) {\r\n    const params = {\r\n      path: `/${file}`\r\n    };\r\n    try {\r\n      return await request({\r\n        path: `https://content.dropboxapi.com/2/files/download?${stringifyParams(params)}`,\r\n        format: \"text\"\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"not_found\")) {\r\n        err.code = \"ENOENT\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function put(file, data, mode = \"overwrite\") {\r\n    const params = {\r\n      path: `/${file}`,\r\n      mode,\r\n      autorename: false,\r\n      mute: true\r\n    };\r\n    await request({\r\n      path: `https://content.dropboxapi.com/2/files/upload?${stringifyParams(params)}`,\r\n      method: \"POST\",\r\n      contentType: \"application/octet-stream\",\r\n      body: data\r\n    });\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    try {\r\n      return await put(file, data, \"add\");\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"conflict\")) {\r\n        err.code = \"EEXIST\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      await requestRPC({\r\n        path: \"files/delete_v2\",\r\n        body: {\r\n          path: `/${file}`\r\n        }\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"not_found\")) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  return {\r\n    name: \"onedrive\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list\r\n  };\r\n  \r\n  async function query(args) {\r\n    args.path = `https://graph.microsoft.com/v1.0/me/drive/special/approot${args.path}`;\r\n    return await request(args);\r\n  }\r\n  \r\n  async function list(file) {\r\n    if (file) {\r\n      file = `:/${file}:`;\r\n    }\r\n    let result = await query({\r\n      path: `${file}/children?select=name`\r\n    });\r\n    let files = result.value.map(i => i.name);\r\n    while (result[\"@odata.nextLink\"]) {\r\n      result = await request({\r\n        path: result[\"@odata.nextLink\"]\r\n      });\r\n      files = files.concat(result.value.map(i => i.name));\r\n    }\r\n    return files;\r\n  }\r\n  \r\n  async function get(file) {\r\n    return await query({\r\n      path: `:/${file}:/content`,\r\n      format: \"text\"\r\n    });\r\n  }\r\n  \r\n  async function put(file, data) {\r\n    await query({\r\n      method: \"PUT\",\r\n      path: `:/${file}:/content`,\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n      },\r\n      body: data\r\n    });\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    try {\r\n      await query({\r\n        method: \"PUT\",\r\n        path: `:/${file}:/content?@microsoft.graph.conflictBehavior=fail`,\r\n        headers: {\r\n          \"Content-Type\": \"text/plain\"\r\n        },\r\n        body: data\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"nameAlreadyExists\")) {\r\n        err.code = \"EEXIST\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      await query({\r\n        method: \"DELETE\",\r\n        path: `:/${file}:`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest, RequestError} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch,\r\n  FormData = (typeof self !== \"undefined\" ? self : global).FormData,\r\n  Blob = (typeof self !== \"undefined\" ? self : global).Blob\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  const fileMetaCache = new Map;\r\n  let lockRev;\r\n  return {\r\n    name: \"google\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list,\r\n    init,\r\n    acquireLock,\r\n    releaseLock,\r\n    fileMetaCache\r\n  };\r\n  \r\n  async function revDelete(fileId, revId) {\r\n    await request({\r\n      method: \"DELETE\",\r\n      path: `https://www.googleapis.com/drive/v3/files/${fileId}/revisions/${revId}`\r\n    });\r\n  }\r\n  \r\n  async function acquireLock(expire) {\r\n    const lock = fileMetaCache.get(\"lock.json\");\r\n    const {headRevisionId} = await queryPatch(lock.id, JSON.stringify({expire: Date.now() + expire * 60 * 1000}));\r\n    const result = await request({\r\n      path: `https://www.googleapis.com/drive/v3/files/${lock.id}/revisions?fields=revisions(id)`\r\n    });\r\n    for (let i = 1; i < result.revisions.length; i++) {\r\n      const revId = result.revisions[i].id;\r\n      if (revId === headRevisionId) {\r\n        // success\r\n        lockRev = headRevisionId;\r\n        return;\r\n      }\r\n      const rev = JSON.parse(await request({\r\n        path: `https://www.googleapis.com/drive/v3/files/${lock.id}/revisions/${revId}?alt=media`\r\n      }));\r\n      if (rev.expire > Date.now()) {\r\n        // failed, delete the lock\r\n        await revDelete(lock.id, headRevisionId);\r\n        throw new RequestError(\"failed to acquire lock\", null, \"EEXIST\");\r\n      }\r\n      // delete outdated lock\r\n      await revDelete(lock.id, revId);\r\n    }\r\n    throw new Error(\"cannot find lock revision\");\r\n  }\r\n  \r\n  async function releaseLock() {\r\n    const lock = fileMetaCache.get(\"lock.json\");\r\n    await revDelete(lock.id, lockRev);\r\n    lockRev = null;\r\n  }\r\n  \r\n  async function queryList(path, onPage) {\r\n    path = \"https://www.googleapis.com/drive/v3/files?spaces=appDataFolder&fields=nextPageToken,files(id,name,headRevisionId)\" + (path ? \"&\" + path : \"\");\r\n    let result = await request({path});\r\n    onPage(result);\r\n    while (result.nextPageToken) {\r\n      result = await request({path: `${path}&pageToken=${result.nextPageToken}`});\r\n      onPage(result);\r\n    }\r\n  }\r\n  \r\n  async function queryPatch(id, text) {\r\n    return await request({\r\n      method: \"PATCH\",\r\n      path: `https://www.googleapis.com/upload/drive/v3/files/${id}?uploadType=media&fields=headRevisionId`,\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n      },\r\n      body: text\r\n    });\r\n  }\r\n  \r\n  async function updateMeta(query) {\r\n    if (query) {\r\n      query = `q=${encodeURIComponent(query)}`;\r\n    }\r\n    await queryList(query, result => {\r\n      for (const file of result.files) {\r\n        fileMetaCache.set(file.name, file);\r\n      }\r\n    });\r\n  }\r\n  \r\n  async function init() {\r\n    await updateMeta();\r\n    if (!fileMetaCache.has(\"lock.json\")) {\r\n      await post(\"lock.json\", \"{}\");\r\n    }\r\n    if (!fileMetaCache.has(\"meta.json\")) {\r\n      await post(\"meta.json\", \"{}\");\r\n    }\r\n  }\r\n  \r\n  async function list(file) {\r\n    // FIXME: this only works if file is a single dir\r\n    // FIXME: this only works if the list method is called right after init, use\r\n    // queryList instead?\r\n    return [...fileMetaCache.values()]\r\n      .filter(f => f.name.startsWith(file + \"/\"))\r\n      .map(f => f.name.split(\"/\")[1]);\r\n  }\r\n  \r\n  async function get(file) {\r\n    let meta = fileMetaCache.get(file);\r\n    if (!meta) {\r\n      await updateMeta(`name = '${file}'`);\r\n      meta = fileMetaCache.get(file);\r\n      if (!meta) {\r\n        throw new RequestError(`metaCache doesn't contain ${file}`, null, \"ENOENT\");\r\n      }\r\n    }\r\n    try {\r\n      return await request({\r\n        path: `https://www.googleapis.com/drive/v3/files/${meta.id}?alt=media`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        err.code = \"ENOENT\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function put(file, data) {\r\n    if (!fileMetaCache.has(file)) {\r\n      return await post(file, data);\r\n    }\r\n    const meta = fileMetaCache.get(file);\r\n    const result = await queryPatch(meta.id, data);\r\n    meta.headRevisionId = result.headRevisionId;\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    const body = new FormData;\r\n    const meta = {\r\n      name: file,\r\n      parents: [\"appDataFolder\"]\r\n    };\r\n    body.append(\"metadata\", new Blob([JSON.stringify(meta)], {type: \"application/json; charset=UTF-8\"}));\r\n    body.append(\"media\", new Blob([data], {type: \"text/plain\"}));\r\n    const result = await request({\r\n      method: \"POST\",\r\n      path: \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id,name,headRevisionId\",\r\n      body\r\n    });\r\n    fileMetaCache.set(result.name, result);\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    const meta = fileMetaCache.get(file);\r\n    if (!meta) {\r\n      return;\r\n    }\r\n    try {\r\n      await request({\r\n        method: \"DELETE\",\r\n        path: `https://www.googleapis.com/drive/v3/files/${meta.id}`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","export function dirname(path) {\r\n  const dir = path.replace(/[/\\\\][^/\\\\]+\\/?$/, \"\");\r\n  if (dir === path) return \".\";\r\n  return dir;\r\n}\r\n","/* global self */\r\nconst {dirname} = require(\"path\");\r\n\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction arrayify(o) {\r\n  return Array.isArray(o) ? o : [o];\r\n}\r\n\r\nfunction xmlToJSON(node) {\r\n  // FIXME: xmldom doesn't support children\r\n  const children = Array.prototype.filter.call(node.childNodes, i => i.nodeType === 1);\r\n  if (!children.length) {\r\n    return node.textContent;\r\n  }\r\n  \r\n  const o = {};\r\n  for (const c of children) {\r\n    const cResult = xmlToJSON(c);\r\n    if (!o[c.localName]) {\r\n      o[c.localName] = cResult;\r\n    } else if (!Array.isArray(o[c.localName])) {\r\n      const list = [o[c.localName]];\r\n      list.push(cResult);\r\n      o[c.localName] = list;\r\n    } else {\r\n      o[c.localName].push(cResult);\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\nfunction createDrive({\r\n  username,\r\n  password,\r\n  url,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch,\r\n  DOMParser = (typeof self !== \"undefined\" ? self : global).DOMParser,\r\n}) {\r\n  if (!url.endsWith(\"/\")) {\r\n    url += \"/\";\r\n  }\r\n  let lockToken;\r\n  const request = createRequest({fetch, username, password});\r\n  return {\r\n    name: \"webdav\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list,\r\n    // acquireLock,\r\n    // releaseLock\r\n  };\r\n  \r\n  async function requestDAV({path, ...args}) {\r\n    if (lockToken) {\r\n      args.headers = args.headers || {};\r\n      args.headers[\"If\"] = `(${lockToken})`;\r\n    }\r\n    const text = await request({\r\n      path: `${url}${path}`,\r\n      ...args\r\n    });\r\n    if (args.format || typeof text !== \"string\" || !text) return text;\r\n    \r\n    const parser = new DOMParser;\r\n    const xml = parser.parseFromString(text, \"application/xml\");\r\n    const result = xmlToJSON(xml);\r\n    if (result.error) {\r\n      throw new Error(`Failed requesting DAV at ${url}${path}: ${JSON.stringify(result.error)}`);\r\n    }\r\n    if (result.multistatus) {\r\n      result.multistatus.response = arrayify(result.multistatus.response);\r\n      for (const r of result.multistatus.response) {\r\n        if (r.error) {\r\n          throw new Error(`Failed requesting DAV at ${url}${path}: ${r.href} ${r.error}`);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  async function list(file) {\r\n    if (!file.endsWith(\"/\")) {\r\n      file += \"/\";\r\n    }\r\n    const result = await requestDAV({\r\n      method: \"PROPFIND\",\r\n      path: file,\r\n      contentType: \"application/xml\",\r\n      body: \r\n        `<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n        <propfind xmlns=\"DAV:\">\r\n          <allprop/>\r\n        </propfind>`,\r\n      headers: {\r\n        \"Depth\": \"1\"\r\n      }\r\n    });\r\n    \r\n    const files = [];\r\n    for (const entry of arrayify(result.multistatus.response)) {\r\n      if (arrayify(entry.propstat).some(s => s.prop.resourcetype && s.prop.resourcetype.collection !== undefined)) {\r\n        continue;\r\n      }\r\n      const base = `${url}${file}`;\r\n      const absUrl = new URL(entry.href, base).href;\r\n      const name = absUrl.slice(base.length);\r\n      files.push(name);\r\n    }\r\n    return files;\r\n  }\r\n  \r\n  async function get(file) {\r\n    return await requestDAV({\r\n      method: \"GET\",\r\n      path: file,\r\n      format: \"text\"\r\n    });\r\n  }\r\n  \r\n  async function put(file, data) {\r\n    return await withDir(\r\n      dirname(file),\r\n      () => requestDAV({\r\n        method: \"PUT\",\r\n        path: file,\r\n        contentType: \"application/octet-stream\",\r\n        body: data\r\n      })\r\n    );\r\n  }\r\n  \r\n  async function withDir(dir, cb) {\r\n    try {\r\n      return await cb();\r\n    } catch (err) {\r\n      if (err.code !== 409 && err.code !== 404 || dir === \".\") {\r\n        throw err;\r\n      }\r\n    }\r\n    await withDir(dirname(dir), () =>\r\n      requestDAV({\r\n        method: \"MKCOL\",\r\n        path: dir\r\n      })\r\n    );\r\n    return await cb();\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    try {\r\n      return await withDir(\r\n        dirname(file),\r\n        () => requestDAV({\r\n          method: \"PUT\",\r\n          path: file,\r\n          body: data,\r\n          contentType: \"octet-stream\",\r\n          headers: {\r\n            // FIXME: seems webdav-server doesn't support etag, what about others?\r\n            \"If-None-Match\": \"*\"\r\n          }\r\n        })\r\n      );\r\n    } catch (err) {\r\n      if (err.code === 412) {\r\n        err.code = \"EEXIST\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    // FIXME: support deleting collections?\r\n    // FIXME: handle errors?\r\n    try {\r\n      await requestDAV({\r\n        method: \"DELETE\",\r\n        path: file\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) return;\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  // async function acquireLock(mins) {\r\n    // const r = await requestDAV({\r\n      // method: \"LOCK\",\r\n      // path: \"\",\r\n      // body: \r\n        // `<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n        // <lockinfo xmlns='DAV:'> \r\n          // <lockscope><exclusive/></lockscope> \r\n          // <locktype><write/></locktype> \r\n        // </lockinfo> `,\r\n      // headers: {\r\n        // \"Timeout\": `Second-${mins * 60}`\r\n      // },\r\n      // raw: true\r\n    // });\r\n    // lockToken = r.headers.get(\"Lock-Token\");\r\n  // }\r\n  \r\n  // async function releaseLock() {\r\n    // await requestDAV({\r\n      // method: \"UNLOCK\",\r\n      // path: \"\",\r\n      // headers: {\r\n        // \"Lock-Token\": lockToken\r\n      // }\r\n    // });\r\n  // }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n"],"names":["createLock","maxActiveReader","Infinity","firstTask","lastTask","activeReader","self","read","fn","que","write","length","block","task","createTask","next","prev","deque","q","promise","defer","o","Promise","resolve","reject","q2","result","err","onDone","then","_onDone","pending","afterDone","debounced","timer","clearTimeout","setTimeout","run","buildDrive","_drive","drive","Object","create","get","path","JSON","parse","put","data","stringify","post","isInit","acquireLock","releaseLock","getMeta","putMeta","peekChanges","expire","Date","now","code","delete","oldMeta","newMeta","lastChange","dbToCloud","onGet","onPut","onDelete","onFirstSync","onWarn","console","error","onProgress","compareRevision","getState","setState","lockExpire","state","meta","changeCache","Map","saveState","revisionCache","lock","use","init","uninit","delete_","syncNow","Boolean","enabled","newDrive","Error","queue","clear","syncPull","changes","list","map","name","action","_id","slice","end","Math","floor","i","newChanges","set","concat","idx","change","loaded","id","doc","_rev","phase","total","size","rev","syncPush","values","remoteRev","undefined","push","lastChanges","index","len","window","sync","peek","_syncNow","changed","RequestError","constructor","message","origin","status","captureStackTrace","delay","time","createRequest","fetch","cooldown","getAccessToken","username","password","basicAuth","base64","args","done","doRequest","method","contentType","_headers","headers","format","raw","assign","res","ok","retry","Number","text","resContentType","test","json","createDrive","userAgent","owner","repo","global","request","shaCache","requestAPI","file","names","item","sha","content","overwrite","params","has","body","retried","includes","requestRPC","entries","entry","has_more","cursor","stringifyParams","obj","URLSearchParams","toString","mode","autorename","mute","query","files","value","FormData","Blob","fileMetaCache","lockRev","revDelete","fileId","revId","queryPatch","headRevisionId","revisions","queryList","onPage","nextPageToken","updateMeta","encodeURIComponent","filter","f","startsWith","split","parents","append","type","dirname","dir","replace","arrayify","Array","isArray","xmlToJSON","node","children","prototype","call","childNodes","nodeType","textContent","c","cResult","localName","url","DOMParser","endsWith","requestDAV","parser","xml","parseFromString","multistatus","response","r","href","propstat","some","s","prop","resourcetype","collection","base","absUrl","URL","withDir","cb"],"mappings":"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"}