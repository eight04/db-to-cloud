{"version":3,"file":"db-to-cloud.js","sources":["../node_modules/@eight04/read-write-lock/index.js","../lib/db-to-cloud.js","../shim/empty.js","../node_modules/universal-base64/dist/browser.js","../lib/request.js","../lib/drive/github.js","../lib/drive/dropbox.js","../lib/drive/onedrive.js","../lib/drive/google.js"],"sourcesContent":["function createLock({maxActiveReader = Infinity} = {}) {\r\n  let firstTask;\r\n  let lastTask;\r\n  let activeReader = 0;\r\n  const self = {\r\n    read: fn => que(fn, false),\r\n    write: fn => que(fn, true),\r\n    length: 0\r\n  };\r\n  return self;\r\n  \r\n  function que(fn, block) {\r\n    const task = createTask({fn, block});\r\n    if (!lastTask) {\r\n      firstTask = lastTask = task;\r\n    } else {\r\n      lastTask.next = task;\r\n      task.prev = lastTask;\r\n      lastTask = task;\r\n      if (!firstTask) {\r\n        firstTask = lastTask;\r\n      }\r\n    }\r\n    self.length++;\r\n    deque();\r\n    return task.q.promise;\r\n  }\r\n  \r\n  function defer() {\r\n    const o = {};\r\n    o.promise = new Promise((resolve, reject) => {\r\n      o.resolve = resolve;\r\n      o.reject = reject;\r\n    });\r\n    return o;\r\n  }\r\n  \r\n  function createTask({\r\n    fn,\r\n    block = false,\r\n    prev,\r\n    next,\r\n    q = defer(),\r\n    q2 = fn.length ? defer() : null\r\n  }) {\r\n    return {fn, block, prev, next, q, q2};\r\n  }\r\n  \r\n  function deque() {\r\n    const task = firstTask;\r\n    if (\r\n      !task ||\r\n      task.block && task.prev ||\r\n      task.prev && task.prev.block ||\r\n      activeReader >= maxActiveReader\r\n    ) {\r\n      return;\r\n    }\r\n    if (!task.block) {\r\n      activeReader++;\r\n    }\r\n    firstTask = task.next;\r\n    let result;\r\n    try {\r\n      result = task.fn(task.q2 && task.q2.resolve);\r\n    } catch (err) {\r\n      task.q.reject(err);\r\n      // auto release with sync error\r\n      // q2 is useless in this case\r\n      onDone();\r\n      return;\r\n    }\r\n    if (task.q2) {\r\n      task.q2.promise.then(_onDone);\r\n    }\r\n    if (result && result.then) {\r\n      const pending = result.then(task.q.resolve, task.q.reject);\r\n      if (!task.q2) {\r\n        pending.then(onDone);\r\n      }\r\n    } else {\r\n      task.q.resolve(result);\r\n      if (!task.q2) {\r\n        // it's a sync function and you don't want to release it manually, why\r\n        // do you need a lock?\r\n        onDone();\r\n        return;\r\n      }\r\n    }\r\n    deque();\r\n    \r\n    function onDone() {\r\n      _onDone();\r\n    }\r\n    \r\n    function _onDone(afterDone) {\r\n      if (task.prev) {\r\n        task.prev.next = task.next;\r\n      }\r\n      if (task.next) {\r\n        task.next.prev = task.prev;\r\n      }\r\n      if (lastTask === task) {\r\n        lastTask = task.prev;\r\n      }\r\n      if (!task.block) {\r\n        activeReader--;\r\n      }\r\n      self.length--;\r\n      if (afterDone) {\r\n        afterDone();\r\n      }\r\n      deque();\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLockPool(options) {\r\n  const locks = new Map; // scope -> lock\r\n  return {\r\n    read: (scope, fn) => op(scope, fn, \"read\"),\r\n    write: (scope, fn) => op(scope, fn, \"write\"),\r\n    locks\r\n  };\r\n  \r\n  async function op(scopeIter, fn, opType) {\r\n    // FIXME: dead lock if there are duplicated scopes?\r\n    const scopes = [];\r\n    const acquiring = [];\r\n    for (const scope of scopeIter) {\r\n      let lock = locks.get(scope);\r\n      if (!lock) {\r\n        lock = createLock(options);\r\n        locks.set(scope, lock);\r\n      }\r\n      const o = {\r\n        lock,\r\n        scope,\r\n        relase: null\r\n      };\r\n      acquiring.push(lock[opType](release => {\r\n        o.release = release;\r\n      }));\r\n      scopes.push(o);\r\n    }\r\n    await Promise.all(acquiring);\r\n    let result;\r\n    try {\r\n      result = fn(fn.length && onDone);\r\n    } catch (err) {\r\n      onDone();\r\n      throw err;\r\n    }\r\n    if (result && result.then) {\r\n      if (!fn.length) {\r\n        result.then(onDone, onDone);\r\n      }\r\n      return await result;\r\n    }\r\n    if (!fn.length) {\r\n      onDone();\r\n    }\r\n    return result;\r\n    \r\n    function onDone() {\r\n      for (const scope of scopes) {\r\n        scope.release(() => {\r\n          if (!scope.lock.length) {\r\n            locks.delete(scope.scope);\r\n          }\r\n        });\r\n      }\r\n      scopes.length = 0;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  createLock,\r\n  createLockPool\r\n};\r\n","const {createLock} = require(\"@eight04/read-write-lock\");\r\n\r\nfunction debounced(fn) {\r\n  let timer = 0;\r\n  let q;\r\n  return () => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(run);\r\n    if (!q) {\r\n      q = defer();\r\n    }\r\n    return q.promise;\r\n  };\r\n  \r\n  function run() {\r\n    Promise.resolve(fn())\r\n      .then(q.resolve, q.reject);\r\n    timer = 0;\r\n    q = null;\r\n  }\r\n  \r\n  function defer() {\r\n    const o = {};\r\n    o.promise = new Promise((resolve, reject) => {\r\n      o.resolve = resolve;\r\n      o.reject = reject;\r\n    });\r\n    return o;\r\n  }\r\n}\r\n\r\nfunction buildDrive(_drive) {\r\n  const drive = Object.create(_drive);\r\n  drive.get = async path => JSON.parse(await _drive.get(path));\r\n  drive.put = async (path, data) => await _drive.put(path, JSON.stringify(data));\r\n  drive.post = async (path, data) => await _drive.post(path, JSON.stringify(data));\r\n  \r\n  if (!drive.acquireLock) {\r\n    drive.acquireLock = acquireLock;\r\n    drive.releaseLock = releaseLock;\r\n  }\r\n  \r\n  if (!drive.getMeta) {\r\n    drive.getMeta = getMeta;\r\n    drive.putMeta = putMeta;\r\n  }\r\n  \r\n  if (!drive.peekChanges) {\r\n    drive.peekChanges = peekChanges;\r\n  }\r\n  \r\n  return drive;\r\n  \r\n  async function acquireLock(expire) {\r\n    try {\r\n      await this.post(\"lock.json\", {expire: Date.now() + expire * 60 * 1000});\r\n    } catch (err) {\r\n      if (err.code === \"EEXIST\") {\r\n        const data = await this.get(\"lock.json\");\r\n        if (Date.now() > data.expire) {\r\n          await this.delete(\"lock.json\");\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function releaseLock() {\r\n    await this.delete(\"lock.json\");\r\n  }\r\n  \r\n  async function getMeta() {\r\n    try {\r\n      return await this.get(\"meta.json\");\r\n    } catch (err) {\r\n      if (err.code === \"ENOENT\" || err.code === 404) {\r\n        return {};\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function putMeta(data) {\r\n    await this.put(\"meta.json\", data);\r\n  }\r\n  \r\n  async function peekChanges(oldMeta) {\r\n    const newMeta = await this.getMeta();\r\n    return newMeta.lastChange !== oldMeta.lastChange;\r\n  }\r\n}\r\n\r\nfunction dbToCloud({\r\n  onGet,\r\n  onPut,\r\n  onDelete,\r\n  onFirstSync,\r\n  onWarn = console.error,\r\n  onProgress,\r\n  compareRevision,\r\n  getState,\r\n  setState,\r\n  lockExpire = 60\r\n}) {\r\n  let drive;\r\n  let state;\r\n  let meta;\r\n  const changeCache = new Map;\r\n  const saveState = debounced(() => setState(drive, state));\r\n  const revisionCache = new Map;\r\n  const lock = createLock();\r\n  return {\r\n    use,\r\n    start,\r\n    stop,\r\n    put,\r\n    delete: delete_,\r\n    syncNow,\r\n    drive: () => drive,\r\n    isInit: () => Boolean(state && state.enabled)\r\n  };\r\n  \r\n  function use(newDrive) {\r\n    drive = buildDrive(newDrive);\r\n  }\r\n  \r\n  async function start() {\r\n    if (state && state.enabled) {\r\n      return;\r\n    }\r\n    if (!drive) {\r\n      throw new Error(\"cloud drive is undefined\");\r\n    }\r\n    if (drive.init) {\r\n      await drive.init();\r\n    }\r\n    \r\n    state = await getState(drive) || {};\r\n    state.enabled = true;\r\n    if (!state.queue) {\r\n      state.queue = [];\r\n    }\r\n    if (state.lastChange == null) {\r\n      await onFirstSync();\r\n    }\r\n    await syncNow();\r\n  }\r\n  \r\n  async function stop() {\r\n    if (!state || !state.enabled) {\r\n      return;\r\n    }\r\n    state.enabled = false;\r\n    await lock.write(async () => {\r\n      if (drive.uninit) {\r\n        await drive.uninit();\r\n      }\r\n      await saveState();\r\n    });\r\n  }\r\n  \r\n  async function syncPull() {\r\n    meta = await drive.getMeta();\r\n    if (!meta.lastChange || meta.lastChange === state.lastChange) {\r\n      // nothing changes\r\n      return;\r\n    }\r\n    let changes = [];\r\n    if (!state.lastChange) {\r\n      // pull everything\r\n      changes = (await drive.list(\"docs\"))\r\n        .map(name => ({action: 'put', _id: name.slice(0, -5)}));\r\n    } else {\r\n      const end = Math.floor((meta.lastChange - 1) / 100); // inclusive end\r\n      let i = Math.floor(state.lastChange / 100);\r\n      while (i <= end) {\r\n        const newChanges = await drive.get(`changes/${i}.json`);\r\n        changeCache.set(i, newChanges);\r\n        changes = changes.concat(newChanges);\r\n        i++;\r\n      }\r\n      changes = changes.slice(state.lastChange % 100);\r\n    }\r\n    // merge changes\r\n    const idx = new Map;\r\n    for (const change of changes) {\r\n      idx.set(change._id, change);\r\n    }\r\n    let loaded = 0;\r\n    for (const [id, change] of idx) {\r\n      let doc, _rev;\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'pull',\r\n          total: idx.size,\r\n          loaded,\r\n          change\r\n        });\r\n      }\r\n      if (change.action === \"delete\") {\r\n        await onDelete(id, change._rev);\r\n      } else if (change.action === \"put\") {\r\n        try {\r\n          ({doc, _rev} = await drive.get(`docs/${id}.json`));\r\n        } catch (err) {\r\n          if (err.code === \"ENOENT\" || err.code === 404) {\r\n            onWarn(`Cannot find ${id}. Is it deleted without updating the history?`);\r\n            loaded++;\r\n            continue;\r\n          }\r\n          throw err;\r\n        }\r\n        await onPut(doc);\r\n      }\r\n      // record the remote revision\r\n      const rev = change._rev || _rev;\r\n      if (rev) {\r\n        revisionCache.set(id, rev);\r\n      }\r\n      loaded++;\r\n    }\r\n    state.lastChange = meta.lastChange;\r\n    await saveState();\r\n  }\r\n  \r\n  async function syncPush() {\r\n    if (!state.queue.length) {\r\n      // nothing to push\r\n      return;\r\n    }\r\n    // snapshot\r\n    const changes = state.queue.slice();\r\n\r\n    // merge changes\r\n    const idx = new Map;\r\n    for (const change of changes) {\r\n      idx.set(change._id, change);\r\n    }\r\n    // drop outdated change\r\n    const newChanges = [];\r\n    for (const change of idx.values()) {\r\n      // FIXME: is it safe to assume that the local doc is newer when\r\n      // remoteRev is undefined?\r\n      const remoteRev = revisionCache.get(change._id);\r\n      if (remoteRev !== undefined && compareRevision(change._rev, remoteRev) <= 0) {\r\n        continue;\r\n      }\r\n      newChanges.push(change);\r\n    }\r\n    // FIXME: there should be no need to push data when !newChanges.length\r\n    \r\n    // start pushing\r\n    let loaded = 0;\r\n    for (const change of newChanges) {\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'push',\r\n          loaded,\r\n          total: newChanges.length,\r\n          change\r\n        });\r\n      }\r\n      if (change.action === \"delete\") {\r\n        await drive.delete(`docs/${change._id}.json`);\r\n      } else if (change.action === \"put\") {\r\n        const doc = await onGet(change._id, change._rev);\r\n        await drive.put(`docs/${change._id}.json`, {doc, _rev: change._rev});\r\n      }\r\n      revisionCache.set(change._id, change._rev);\r\n      loaded++;\r\n    }\r\n    \r\n    // push changes\r\n    let lastChanges;\r\n    let index;\r\n    // meta is already pulled in syncPull\r\n    if (meta.lastChange) {\r\n      index = Math.floor(meta.lastChange / 100);\r\n      const len = meta.lastChange % 100;\r\n      lastChanges = len ?\r\n        changeCache.get(index) || await drive.get(`changes/${index}.json`) :\r\n        [];\r\n      // it is possible that JSON data contains more records defined by\r\n      // meta.lastChange\r\n      lastChanges = lastChanges.slice(0, len).concat(newChanges);\r\n    } else {\r\n      // first sync\r\n      index = 0;\r\n      lastChanges = newChanges;\r\n    }\r\n    \r\n    for (let i = 0; i * 100 < lastChanges.length; i++) {\r\n      const window = lastChanges.slice(i * 100, (i + 1) * 100);\r\n      await drive.put(`changes/${index + i}.json`, window);\r\n      changeCache.set(index + i, window);\r\n    }\r\n    meta.lastChange = (meta.lastChange || 0) + newChanges.length;\r\n    await drive.putMeta(meta);\r\n    \r\n    state.queue = state.queue.slice(changes.length);\r\n    state.lastChange = meta.lastChange;\r\n    await saveState();\r\n  }\r\n  \r\n  async function sync() {\r\n    await drive.acquireLock(lockExpire);\r\n    try {\r\n      await syncPull();\r\n      await syncPush();\r\n    } finally {\r\n      await drive.releaseLock();\r\n    }\r\n  }\r\n  \r\n  async function syncNow(peek = true) {\r\n    if (!state || !state.enabled) {\r\n      throw new Error(\"Cannot sync now, the sync is not enabled\");\r\n    }\r\n    await lock.write(async () => {\r\n      if (onProgress) {\r\n        onProgress({\r\n          phase: 'start'\r\n        });\r\n      }\r\n      try {\r\n        if (!state.queue.length && peek && meta) {\r\n          const changed = await drive.peekChanges(meta);\r\n          if (!changed) {\r\n            return;\r\n          }\r\n        }\r\n        await sync();\r\n      } finally {\r\n        if (onProgress) {\r\n          onProgress({\r\n            phase: 'end'\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  function put(_id, _rev) {\r\n    if (!state || !state.enabled) {\r\n      return;\r\n    }\r\n    state.queue.push({\r\n      _id, _rev, action: \"put\"\r\n    });\r\n    saveState();\r\n  }\r\n  \r\n  function delete_(_id, _rev) {\r\n    if (!state || !state.enabled) {\r\n      return;\r\n    }\r\n    state.queue.push({\r\n      _id, _rev, action: \"delete\"\r\n    });\r\n    saveState();\r\n  }\r\n}\r\n\r\nmodule.exports = {dbToCloud};\r\n","module.exports = () => {};\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction percentToByte(p) {\n    return String.fromCharCode(parseInt(p.slice(1), 16));\n}\nfunction encode(str) {\n    return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte));\n}\nexports.encode = encode;\nfunction byteToPercent(b) {\n    return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`;\n}\nfunction decode(str) {\n    return decodeURIComponent(Array.from(atob(str), byteToPercent).join(\"\"));\n}\nexports.decode = decode;\n//# sourceMappingURL=browser.js.map","const {createLock} = require(\"@eight04/read-write-lock\");\r\n\r\nclass RequestError extends Error {\r\n  constructor(message, origin, code = origin && origin.status) {\r\n    super(message);\r\n    this.code = code;\r\n    this.origin = origin;\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, RequestError);\r\n    }\r\n  }\r\n}\r\n\r\nfunction delay(time) {\r\n  return new Promise(resolve => setTimeout(resolve, time));\r\n}\r\n\r\nfunction createRequest({fetch, cooldown = 0, getAccessToken}) {\r\n  const lock = createLock();\r\n  return args => {\r\n    return lock.write(async done => {\r\n      try {\r\n        return await doRequest(args);\r\n      } finally {\r\n        if (!cooldown || !args.method || args.method === \"GET\") {\r\n          done();\r\n        } else {\r\n          setTimeout(done, cooldown);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  async function doRequest({path, contentType, headers: _headers, format, ...args}) {\r\n    const headers = {\r\n      \"Authorization\": `Bearer ${await getAccessToken()}`\r\n    };\r\n    if (contentType) {\r\n      headers[\"Content-Type\"] = contentType;\r\n    }\r\n    Object.assign(headers, _headers);\r\n    while (true) { // eslint-disable-line no-constant-condition\r\n      const res = await fetch(path, {\r\n        headers,\r\n        ...args\r\n      });\r\n      if (!res.ok) {\r\n        const retry = res.headers.get(\"Retry-After\");\r\n        if (retry) {\r\n          const time = Number(retry);\r\n          if (time) {\r\n            await delay(time * 1000);\r\n            continue;\r\n          }\r\n        }\r\n        const text = await res.text();\r\n        throw new RequestError(`failed to fetch [${res.status}]: ${text}`, res);\r\n      }\r\n      if (format) {\r\n        return await res[format]();\r\n      }\r\n      const resContentType = res.headers.get(\"Content-Type\");\r\n      if (/application\\/json/.test(resContentType)) {\r\n        return await res.json();\r\n      }\r\n      return await res.text();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {createRequest, RequestError};\r\n","/* global self */\r\nconst base64 = require(\"universal-base64\");\r\n\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  userAgent = \"db-to-cloud\",\r\n  owner,\r\n  repo,\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken, cooldown: 1000});\r\n  const shaCache = new Map;\r\n  return {\r\n    name: \"github\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list,\r\n    shaCache\r\n  };\r\n  \r\n  function requestAPI(args) {\r\n    if (!args.headers) {\r\n      args.headers = {};\r\n    }\r\n    if (!args.headers[\"User-Agent\"]) {\r\n      args.headers[\"User-Agent\"] = userAgent;\r\n    }\r\n    if (!args.headers[\"Accept\"]) {\r\n      args.headers[\"Accept\"] = \"application/vnd.github.v3+json\";\r\n    }\r\n    args.path = `https://api.github.com${args.path}`;\r\n    return request(args);\r\n  }\r\n  \r\n  async function list(file) {\r\n    // FIXME: This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the Git Trees API.\r\n    const result = await requestAPI({\r\n      path: `/repos/${owner}/${repo}/contents/${file}`\r\n    });\r\n    const names = [];\r\n    for (const item of result) {\r\n      names.push(item.name);\r\n      shaCache.set(item.path, item.sha);\r\n    }\r\n    return names;\r\n  }\r\n  \r\n  async function get(file) {\r\n    // FIXME: This API supports files up to 1 megabyte in size.\r\n    const result = await requestAPI({\r\n      path: `/repos/${owner}/${repo}/contents/${file}`\r\n    });\r\n    shaCache.set(result.path, result.sha);\r\n    return base64.decode(result.content);\r\n  }\r\n  \r\n  async function put(file, data, overwrite = true) {\r\n    const params = {\r\n      message: \"\",\r\n      content: base64.encode(data)\r\n    };\r\n    if (overwrite && shaCache.has(file)) {\r\n      params.sha = shaCache.get(file);\r\n    }\r\n    const args = {\r\n      method: \"PUT\",\r\n      path: `/repos/${owner}/${repo}/contents/${file}`,\r\n      contentType: \"application/json\",\r\n      body: JSON.stringify(params)\r\n    };\r\n    let retried = false;\r\n    let result;\r\n    while (!result) {\r\n      try {\r\n        result = await requestAPI(args);\r\n      } catch (err) {\r\n        if (err.code !== 422 || !err.message.includes(\"\\\\\\\"sha\\\\\\\" wasn't supplied\")) {\r\n          throw err;\r\n        }\r\n        if (!overwrite || retried) {\r\n          err.code = \"EEXIST\";\r\n          throw err;\r\n        }\r\n        await get(file);\r\n      }\r\n      retried = true;\r\n    }\r\n    shaCache.set(file, result.content.sha);\r\n  }\r\n  \r\n  function post(file, data) {\r\n    return put(file, data, false);\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      let sha = shaCache.get(file);\r\n      if (!sha) {\r\n        await get(file);\r\n        sha = shaCache.get(file);\r\n      }\r\n      await requestAPI({\r\n        method: \"DELETE\",\r\n        path: `/repos/${owner}/${repo}/contents/${file}`,\r\n        body: JSON.stringify({\r\n          message: \"\",\r\n          sha\r\n        })\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      // FIXME: do we have to handle 422 errors?\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  return {\r\n    name: \"dropbox\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list\r\n  };\r\n  \r\n  function requestRPC({path, body, ...args}) {\r\n    return request({\r\n      method: \"POST\",\r\n      path: `https://api.dropboxapi.com/2/${path}`,\r\n      contentType: \"application/json\",\r\n      body: JSON.stringify(body),\r\n      ...args\r\n    });\r\n  }\r\n  \r\n  async function list(file) {\r\n    const names = [];\r\n    let result = await requestRPC({\r\n      path: \"files/list_folder\",\r\n      body: {\r\n        path: `/${file}`\r\n      }\r\n    });\r\n    for (const entry of result.entries) {\r\n      names.push(entry.name);\r\n    }\r\n    if (!result.has_more) {\r\n      return names;\r\n    }\r\n    while (result.has_more) {\r\n      result = await requestRPC({\r\n        path: \"files/list_folder/continue\",\r\n        body: {\r\n          cursor: result.cursor\r\n        }\r\n      });\r\n      for (const entry of result.entries) {\r\n        names.push(entry.name);\r\n      }\r\n    }\r\n    return names;\r\n  }\r\n  \r\n  function stringifyParams(obj) {\r\n    const params = new URLSearchParams;\r\n    params.set(\"arg\", JSON.stringify(obj));\r\n    return params.toString();\r\n  }\r\n  \r\n  async function get(file) {\r\n    const params = {\r\n      path: `/${file}`\r\n    };\r\n    try {\r\n      return await request({\r\n        path: `https://content.dropboxapi.com/2/files/download?${stringifyParams(params)}`,\r\n        format: \"text\"\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"not_found\")) {\r\n        err.code = \"ENOENT\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function put(file, data, mode = \"overwrite\") {\r\n    const params = {\r\n      path: `/${file}`,\r\n      mode,\r\n      autorename: false\r\n    };\r\n    await request({\r\n      path: `https://content.dropboxapi.com/2/files/upload?${stringifyParams(params)}`,\r\n      method: \"POST\",\r\n      contentType: \"application/octet-stream\",\r\n      body: data\r\n    });\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    try {\r\n      return await put(file, data, \"add\");\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"conflict\")) {\r\n        err.code = \"EEXIST\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      await requestRPC({\r\n        path: \"files/delete_v2\",\r\n        body: {\r\n          path: `/${file}`\r\n        }\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"not_found\")) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  return {\r\n    name: \"onedrive\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list\r\n  };\r\n  \r\n  async function query(args) {\r\n    args.path = `https://graph.microsoft.com/v1.0/me/drive/special/approot${args.path}`;\r\n    return await request(args);\r\n  }\r\n  \r\n  async function list(file) {\r\n    if (file) {\r\n      file = `:/${file}:`;\r\n    }\r\n    const result = await query({\r\n      path: `${file}/children?select=name`\r\n    });\r\n    return result.value.map(i => i.name);\r\n  }\r\n  \r\n  async function get(file) {\r\n    return await query({\r\n      path: `:/${file}:/content`,\r\n      format: \"text\"\r\n    });\r\n  }\r\n  \r\n  async function put(file, data) {\r\n    await query({\r\n      method: \"PUT\",\r\n      path: `:/${file}:/content`,\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n      },\r\n      body: data\r\n    });\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    try {\r\n      await query({\r\n        method: \"PUT\",\r\n        path: `:/${file}:/content?@microsoft.graph.conflictBehavior=fail`,\r\n        headers: {\r\n          \"Content-Type\": \"text/plain\"\r\n        },\r\n        body: data\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 409 && err.message.includes(\"nameAlreadyExists\")) {\r\n        err.code = \"EEXIST\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    try {\r\n      await query({\r\n        method: \"DELETE\",\r\n        path: `:/${file}:`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n","/* global self */\r\nconst {createRequest, RequestError} = require(\"../request\");\r\n\r\nfunction createDrive({\r\n  getAccessToken,\r\n  fetch = (typeof self !== \"undefined\" ? self : global).fetch,\r\n  FormData = (typeof self !== \"undefined\" ? self : global).FormData,\r\n  Blob = (typeof self !== \"undefined\" ? self : global).Blob\r\n}) {\r\n  const request = createRequest({fetch, getAccessToken});\r\n  const fileMetaCache = new Map;\r\n  let lockRev;\r\n  return {\r\n    name: \"google\",\r\n    get,\r\n    put,\r\n    post,\r\n    delete: delete_,\r\n    list,\r\n    init,\r\n    acquireLock,\r\n    releaseLock,\r\n    fileMetaCache\r\n  };\r\n  \r\n  async function revDelete(fileId, revId) {\r\n    await request({\r\n      method: \"DELETE\",\r\n      path: `https://www.googleapis.com/drive/v3/files/${fileId}/revisions/${revId}`\r\n    });\r\n  }\r\n  \r\n  async function acquireLock(expire) {\r\n    const lock = fileMetaCache.get(\"lock.json\");\r\n    const {headRevisionId} = await queryPatch(lock.id, JSON.stringify({expire: Date.now() + expire * 60 * 1000}));\r\n    const result = await request({\r\n      path: `https://www.googleapis.com/drive/v3/files/${lock.id}/revisions?fields=revisions(id)`\r\n    });\r\n    for (let i = 1; i < result.revisions.length; i++) {\r\n      const revId = result.revisions[i].id;\r\n      if (revId === headRevisionId) {\r\n        // success\r\n        lockRev = headRevisionId;\r\n        return;\r\n      }\r\n      const rev = JSON.parse(await request({\r\n        path: `https://www.googleapis.com/drive/v3/files/${lock.id}/revisions/${revId}?alt=media`\r\n      }));\r\n      if (rev.expire > Date.now()) {\r\n        // failed, delete the lock\r\n        await revDelete(lock.id, headRevisionId);\r\n        throw new RequestError(\"failed to acquire lock\", null, \"EEXIST\");\r\n      }\r\n      // delete outdated lock\r\n      await revDelete(lock.id, revId);\r\n    }\r\n    throw new Error(\"cannot find lock revision\");\r\n  }\r\n  \r\n  async function releaseLock() {\r\n    const lock = fileMetaCache.get(\"lock.json\");\r\n    await revDelete(lock.id, lockRev);\r\n    lockRev = null;\r\n  }\r\n  \r\n  async function queryList(path, onPage) {\r\n    path = \"https://www.googleapis.com/drive/v3/files?spaces=appDataFolder&fields=nextPageToken,files(id,name,headRevisionId)\" + (path ? \"&\" + path : \"\");\r\n    let result = await request({path});\r\n    onPage(result);\r\n    while (result.nextPageToken) {\r\n      result = await request({path: `${path}&pageToken=${result.nextPageToken}`});\r\n      onPage(result);\r\n    }\r\n  }\r\n  \r\n  async function queryPatch(id, text) {\r\n    return await request({\r\n      method: \"PATCH\",\r\n      path: `https://www.googleapis.com/upload/drive/v3/files/${id}?uploadType=media&fields=headRevisionId`,\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n      },\r\n      body: text\r\n    });\r\n  }\r\n  \r\n  async function updateMeta(query) {\r\n    if (query) {\r\n      query = `q=${encodeURIComponent(query)}`;\r\n    }\r\n    await queryList(query, result => {\r\n      for (const file of result.files) {\r\n        fileMetaCache.set(file.name, file);\r\n      }\r\n    });\r\n  }\r\n  \r\n  async function init() {\r\n    await updateMeta();\r\n    if (!fileMetaCache.has(\"lock.json\")) {\r\n      await post(\"lock.json\", \"{}\");\r\n    }\r\n    if (!fileMetaCache.has(\"meta.json\")) {\r\n      await post(\"meta.json\", \"{}\");\r\n    }\r\n  }\r\n  \r\n  async function list(file) {\r\n    // FIXME: this only works if file is a single dir\r\n    // FIXME: this only works if the list method is called right after init, use\r\n    // queryList instead?\r\n    return [...fileMetaCache.values()]\r\n      .filter(f => f.name.startsWith(file + \"/\"))\r\n      .map(f => f.name.split(\"/\")[1]);\r\n  }\r\n  \r\n  async function get(file) {\r\n    let meta = fileMetaCache.get(file);\r\n    if (!meta) {\r\n      await updateMeta(`name = '${file}'`);\r\n      meta = fileMetaCache.get(file);\r\n      if (!meta) {\r\n        throw new RequestError(`metaCache doesn't contain ${file}`, null, \"ENOENT\");\r\n      }\r\n    }\r\n    try {\r\n      return await request({\r\n        path: `https://www.googleapis.com/drive/v3/files/${meta.id}?alt=media`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        err.code = \"ENOENT\";\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n  async function put(file, data) {\r\n    if (!fileMetaCache.has(file)) {\r\n      return await post(file, data);\r\n    }\r\n    const meta = fileMetaCache.get(file);\r\n    const result = await queryPatch(meta.id, data);\r\n    meta.headRevisionId = result.headRevisionId;\r\n  }\r\n  \r\n  async function post(file, data) {\r\n    const body = new FormData;\r\n    const meta = {\r\n      name: file,\r\n      parents: [\"appDataFolder\"]\r\n    };\r\n    body.append(\"metadata\", new Blob([JSON.stringify(meta)], {type: \"application/json; charset=UTF-8\"}));\r\n    body.append(\"media\", new Blob([data], {type: \"text/plain\"}));\r\n    const result = await request({\r\n      method: \"POST\",\r\n      path: \"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id,name,headRevisionId\",\r\n      body\r\n    });\r\n    fileMetaCache.set(result.name, result);\r\n  }\r\n  \r\n  async function delete_(file) {\r\n    const meta = fileMetaCache.get(file);\r\n    if (!meta) {\r\n      return;\r\n    }\r\n    try {\r\n      await request({\r\n        method: \"DELETE\",\r\n        path: `https://www.googleapis.com/drive/v3/files/${meta.id}`\r\n      });\r\n    } catch (err) {\r\n      if (err.code === 404) {\r\n        return;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = createDrive;\r\n"],"names":["createLock","maxActiveReader","Infinity","firstTask","lastTask","activeReader","self","read","fn","que","write","length","block","task","createTask","next","prev","deque","q","promise","defer","o","Promise","resolve","reject","q2","result","err","onDone","then","_onDone","pending","afterDone","debounced","timer","clearTimeout","setTimeout","run","buildDrive","_drive","drive","Object","create","get","path","JSON","parse","put","data","stringify","post","acquireLock","releaseLock","getMeta","putMeta","peekChanges","expire","Date","now","code","delete","oldMeta","newMeta","lastChange","dbToCloud","onGet","onPut","onDelete","onFirstSync","onWarn","console","error","onProgress","compareRevision","getState","setState","lockExpire","state","meta","changeCache","Map","saveState","revisionCache","lock","use","start","stop","delete_","syncNow","isInit","Boolean","enabled","newDrive","Error","init","queue","uninit","syncPull","changes","list","map","name","action","_id","slice","end","Math","floor","i","newChanges","set","concat","idx","change","loaded","id","doc","_rev","phase","total","size","rev","syncPush","values","remoteRev","undefined","push","lastChanges","index","len","window","sync","peek","changed","defineProperty","_module_exports_","value","percentToByte","p","String","fromCharCode","parseInt","encode","str","btoa","encodeURIComponent","replace","byteToPercent","b","charCodeAt","toString","decode","decodeURIComponent","Array","from","atob","join","RequestError","constructor","message","origin","status","captureStackTrace","delay","time","createRequest","fetch","cooldown","getAccessToken","args","done","doRequest","method","contentType","_headers","headers","format","assign","res","ok","retry","Number","text","resContentType","test","json","createDrive","userAgent","owner","repo","global","request","shaCache","requestAPI","file","names","item","sha","base64","content","overwrite","params","has","body","retried","includes","requestRPC","entries","entry","has_more","cursor","stringifyParams","obj","URLSearchParams","mode","autorename","query","FormData","Blob","fileMetaCache","lockRev","revDelete","fileId","revId","queryPatch","headRevisionId","revisions","queryList","onPage","nextPageToken","updateMeta","files","filter","f","startsWith","split","parents","append","type"],"mappings":"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"}